
license "libc++ is a new implementation of the C++ standard library, targeting C++11.
Copyright (c) 2009-2014 by the LLVM/libc++ contributors.

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the \"Software\"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE."

defines
{
	LIBSTDCXX
	_LIBCPP_BUILD_STATIC
}

sources
{
	include/experimental/dynarray
	include/experimental/optional
	include/ext/__hash
	include/ext/hash_map
	include/ext/hash_set
	include/support/ibm/limits.h
	include/support/ibm/support.h
	include/support/ibm/xlocale.h
	include/support/solaris/floatingpoint.h
	include/support/solaris/wchar.h
	include/support/solaris/xlocale.h
	include/support/win32/limits_win32.h
	include/support/win32/locale_win32.h
	include/support/win32/math_win32.h
	include/support/win32/support.h
	include/__bit_reference
	include/__config
	include/__debug
	include/__functional_03
	include/__functional_base
	include/__functional_base_03
	include/__hash_table
	include/__locale
	include/__mutex_base
	include/__split_buffer
	include/__sso_allocator
	include/__std_stream
	include/__tree
	include/__tuple
	include/__tuple_03
	include/__undef_min_max
	include/algorithm
	include/array
	include/atomic
	include/bitset
	include/cassert
	include/ccomplex
	include/cctype
	include/cerrno
	include/cfenv
	include/cfloat
	include/chrono
	include/cinttypes
	include/ciso646
	include/climits
	include/clocale
	include/cmath
	include/codecvt
	include/complex
	include/complex.h
	include/condition_variable
	include/csetjmp
	include/csignal
	include/cstdarg
	include/cstdbool
	include/cstddef
	include/cstdint
	include/cstdio
	include/cstdlib
	include/cstring
	include/ctgmath
	include/ctime
	include/cwchar
	include/cwctype
	include/deque
	include/exception
	include/forward_list
	include/fstream
	include/functional
	include/future
	include/initializer_list
	include/iomanip
	include/ios
	include/iosfwd
	include/iostream
	include/istream
	include/iterator
	include/limits
	include/list
	include/locale
	include/map
	include/memory
	include/mutex
	include/new
	include/numeric
	include/ostream
	include/queue
	include/random
	include/ratio
	include/regex
	include/scoped_allocator
	include/set
	include/shared_mutex
	include/sstream
	include/stack
	include/stdexcept
	include/streambuf
	include/string
	include/strstream
	include/system_error
	include/tgmath.h
	include/thread
	include/tuple
	include/type_traits
	include/typeindex
	include/typeinfo
	include/unordered_map
	include/unordered_set
	include/utility
	include/valarray
	include/vector
	src/support/solaris/mbsnrtowcs.inc { type = source/cxx-header }
	src/support/solaris/wcsnrtombs.inc { type = source/cxx-header }
	src/support/solaris/xlocale.c { type = source/cxx-header }
	src/algorithm.cpp
	src/bind.cpp
	src/chrono.cpp
	src/condition_variable.cpp
	src/debug.cpp
	src/exception.cpp
	src/future.cpp
	src/hash.cpp
	src/ios.cpp
	src/iostream.cpp
	src/locale.cpp
	src/memory.cpp
	src/mutex.cpp
	src/new.cpp
	src/optional.cpp
	src/random.cpp
	src/regex.cpp
	src/shared_mutex.cpp
	src/stdexcept.cpp
	src/string.cpp
	src/strstream.cpp
	src/system_error.cpp
	src/thread.cpp
	src/typeinfo.cpp
	src/utility.cpp
	src/valarray.cpp
}

sources:winrt
{
	src/support/win32/locale_win32.cpp
	src/support/win32/support.cpp
}
